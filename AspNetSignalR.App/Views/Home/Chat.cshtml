@model AspNetSignalR.App.ViewModels.ChatViewModel

@{
	ViewBag.Title = "Chat";
}

<h2>Chat</h2>

<style type="text/css">
	.chatbox .container {
		background-color: #99CCFF;		
		padding: 20px;
		margin: 20px;
	}
</style>

<div class="chatbox">
	<div class="container">
		<input type="text" id="message" />
		<input type="button" id="sendmessage" value="Send" />		
		<ul id="discussion"></ul>
	</div>
</div>

@section scripts
{
	<!--Reference the SignalR library. -->
	<script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
	<!--Reference the autogenerated SignalR hub script. -->
	<script src="~/signalr/hubs"></script>
	<!--Add script to update the page and send messages.-->
	<script type="text/javascript">
        $(function () {
            // Declare a proxy to reference the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call to broadcast messages.
            chat.client.broadcastMessage = function (name, message) {
                // Html encode display name and message.
                var encodedName = $('<div />').text(name).html();
                var encodedMsg = $('<div />').text(message).html();
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + encodedName + '</strong>:&nbsp;&nbsp;' + encodedMsg + '</li>');
            };

            chat.client.broadcastMessages = function (messages) {
                $('#discussion').children('li').remove();
                $.each(messages, function (idx, mess) {
                    console.log(mess);
					var encodedName = mess.Username;
                    var encodedMsg = mess.Message;
					$('#discussion').append('<li><strong>' + encodedName + '</strong>:&nbsp;&nbsp;' + encodedMsg + '</li>');
                });
			}

            // Set initial focus to message input box.
            $('#message').focus();

            var username = "@Model.UserName";
            var chatRoom = "@Model.ChatRoom";

            // Start the connection.
            $.connection.hub.start().done(function () {

                //For joining room right after connected
				chat.server.joinChatRoom(chatRoom);

                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
					chat.server.sendMessageToRoom(username, chatRoom, $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
	</script>
}